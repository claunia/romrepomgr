<!--
// /***************************************************************************
// RomRepoMgr - ROM repository manager
// ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐
//
// Author(s)      : Natalia Portillo <claunia@claunia.com>
//
// ‐‐[ License ] ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐
//
//     This program is free software: you can redistribute it and/or modify
//     it under the terms of the GNU General public License as
//     published by the Free Software Foundation, either version 3 of the
//     License, or (at your option) any later version.
//
//     This program is distributed in the hope that it will be useful,
//     but WITHOUT ANY WARRANTY; without even the implied warranty of
//     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//     GNU General public License for more details.
//
//     You should have received a copy of the GNU General public License
//     along with this program.  If not, see <http://www.gnu.org/licenses/>.
//
// ‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐‐
// Copyright © 2020-2024 Natalia Portillo
// ****************************************************************************/
-->
<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:RomRepoMgr.ViewModels;assembly=RomRepoMgr"
        xmlns:resources="clr-namespace:RomRepoMgr.Resources"
        mc:Ignorable="d"
        d:DesignWidth="800"
        d:DesignHeight="450"
        Width="480"
        Height="360"
        x:Class="RomRepoMgr.Views.ImportDatFolder"
        Icon="/Assets/avalonia-logo.ico"
        CanResize="False"
        Title="{x:Static resources:Localization.ImportDatFolderTitle}"
        WindowStartupLocation="CenterOwner">
    <Design.DataContext>
        <vm:ImportDatFolderViewModel />
    </Design.DataContext>
    <Border Padding="15">
        <Grid RowDefinitions="Auto,Auto,Auto,Auto,Auto,Auto,Auto,*,Auto">
            <StackPanel Grid.Row="0"
                        Orientation="Horizontal"
                        HorizontalAlignment="Stretch">
                <TextBlock Text="{x:Static resources:Localization.PathLabel}"
                           FontWeight="Bold" />
                <TextBlock Text="{Binding FolderPath}" />
            </StackPanel>
            <Grid Grid.Row="1"
                  ColumnDefinitions="Auto,*">
                <TextBlock Grid.Column="0"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center"
                           Text="{x:Static resources:Localization.RomSetCategoryLabel}"
                           FontWeight="Bold"
                           Padding="5" />
                <TextBox Grid.Column="1"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Center"
                         Text="{Binding Category}"
                         Padding="5" />
            </Grid>
            <CheckBox Grid.Row="2"
                      IsChecked="{Binding AllFilesChecked}"
                      IsEnabled="{Binding IsReady}">
                <CheckBox.Content>
                    <TextBlock Text="{x:Static resources:Localization.AllFilesLabel}" />
                </CheckBox.Content>
            </CheckBox>
            <CheckBox Grid.Row="3"
                      IsChecked="{Binding RecursiveChecked}"
                      IsEnabled="{Binding IsReady}">
                <CheckBox.Content>
                    <TextBlock Text="{x:Static resources:Localization.RecursiveLabel}" />
                </CheckBox.Content>
            </CheckBox>
            <TextBlock Grid.Row="4"
                       Text="{Binding StatusMessage}"
                       FontWeight="Bold"
                       HorizontalAlignment="Center" />
            <ProgressBar Grid.Row="5"
                         Minimum="{Binding ProgressMinimum}"
                         Maximum="{Binding ProgressMaximum}"
                         Value="{Binding ProgressValue}"
                         IsIndeterminate="{Binding ProgressIsIndeterminate}"
                         IsVisible="{Binding ProgressVisible}" />
            <StackPanel Grid.Row="6"
                        IsVisible="{Binding Progress2Visible}">
                <TextBlock Text="{Binding Status2Message}" />
                <ProgressBar Minimum="{Binding Progress2Minimum}"
                             Maximum="{Binding Progress2Maximum}"
                             Value="{Binding Progress2Value}"
                             IsIndeterminate="{Binding Progress2IsIndeterminate}" />
            </StackPanel>
            <DataGrid Grid.Row="7"
                      ItemsSource="{Binding ImportResults}"
                      HorizontalScrollBarVisibility="Visible"
                      IsVisible="{Binding IsImporting}">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding Filename}"
                                        Width="Auto"
                                        IsReadOnly="True">
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{x:Static resources:Localization.ResultFilenameLabel}" />
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Status}"
                                        Width="Auto"
                                        IsReadOnly="True">
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{x:Static resources:Localization.ResultStatusLabel}" />
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
            <StackPanel Grid.Row="8"
                        Orientation="Horizontal"
                        IsVisible="{Binding IsReady}"
                        HorizontalAlignment="Right">
                <Button HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        IsEnabled="{Binding CanClose}"
                        Command="{Binding CloseCommand}">
                    <TextBlock Text="{x:Static resources:Localization.CloseLabel}" />
                </Button>
                <Button HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        IsEnabled="{Binding CanStart}"
                        Command="{Binding StartCommand}">
                    <TextBlock Text="{x:Static resources:Localization.StartLabel}" />
                </Button>
            </StackPanel>
        </Grid>
    </Border>
</Window>